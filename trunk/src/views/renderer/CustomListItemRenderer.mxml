<?xml version="1.0"?>
<mx:HBox xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:mx="library://ns.adobe.com/flex/mx"
         xmlns:s="library://ns.adobe.com/flex/spark" verticalScrollPolicy="off" width="100%"
         horizontalScrollPolicy="off" creationPolicy="all" creationComplete="completeHandler(event)">
    <fx:Script><![CDATA[
        import mx.collections.ArrayCollection;

        import spark.components.List;
        import spark.components.supportClasses.ListBase;

        [Embed(source="/assets/minus.png")]
        private var IconMinus:Class;

        protected function completeHandler(event):void {

        }

        private function get dataProvider():ArrayCollection {
            return List(owner).dataProvider as ArrayCollection;
        }

        public function deleteItemHandler(e:Event):void {
            var index:int = dataProvider.getItemIndex(this.data);
            if (index > -1) {
                dataProvider.removeItemAt(index);
            }
        }

        private function onChange(event:Event):void {

            var oldValue:String = trimTrailing0sFromString(valueLabel.text);

            if (oldValue != inputTxt.text) {
                data.value = trimTrailing0sFromString(inputTxt.text);
                valueLabel.text = trimTrailing0sFromString(inputTxt.text);


                //dispatch the data update event
                var list:ListBase = this.owner as ListBase;
                list.dataProvider.itemUpdated(data, 'value', oldValue, inputTxt.text);
            }
            isEdit(false);
        }

        private function trimTrailing0sFromString(s:String):String {
            if(!s) return "0";
            return parseFloat(s).toString();
        }

        private function onEdit(event:Event):void {
            if (!data) return;
            inputTxt.text = trimTrailing0sFromString(data.value);
            isEdit(true);
            //set cursor postion to end
            inputTxt.selectRange(0, inputTxt.text.length + 1);
            inputTxt.setFocus();
        }

        private function isEdit(value:Boolean):void {
            labelDisplay.visible = !value;
            inputTxt.visible = value;
        }

        private function keyEnterHandler(event:KeyboardEvent):void {
            if (event.keyCode == Keyboard.ENTER) {
                onChange(event);
            }
            else if (event.keyCode == Keyboard.ESCAPE) {
                isEdit(false);
            }
        }



        ]]></fx:Script>

    <mx:Canvas  width="100%">
        <mx:HBox width="100%" verticalScrollPolicy="off" horizontalScrollPolicy="off" paddingRight="5" id="labelDisplay"
                 verticalAlign="middle"
                 click="onEdit(event)">
            <mx:Label id="valueLabel" text="{trimTrailing0sFromString(data.value)}"  width="100%" textAlign="left"/>
            <mx:HBox width="100%" horizontalAlign="right">
                <mx:Image source="{IconMinus}" rollOver="isEdit(false)"
                          width="12" height="100%" toolTip="{resourceManager.getString('resources', 'DELETE')}"
                          click="deleteItemHandler(event)"/>
            </mx:HBox>
        </mx:HBox>
        <s:TextInput id="inputTxt" restrict="0-9" mouseDownOutside="onChange(event)" width="100%"
                     visible="false" focusOut="onChange(event)" keyDown="keyEnterHandler(event)"
                     keyUp="keyEnterHandler(event)" maxChars="2"
                     top="1" bottom="1" left="1" right="0"/>
    </mx:Canvas>

</mx:HBox>
