<?xml version="1.0"?>
<!--
  Created by Cookman on 03.12.2014.
-->
<s:Window xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark"
          xmlns:mx="library://ns.adobe.com/flex/mx" resizable="false"
          width="250" height="150" showStatusBar="false" isPopUp="true" alwaysInFront="true" title="Settings"
          maximizable="false"
          minimizable="false" type="{NativeWindowType.UTILITY}"
          creationComplete="creationCompleteHandler(event)">
    <fx:Script><![CDATA[
        import models.LocalStorage;
        import models.MindTimerModel;

        import mx.collections.ArrayCollection;
        import mx.events.ListEvent;

        import views.renderer.CustomListItemEditor;

        import vo.SettingsVO;

        private var settings:SettingsVO;
        private var model:MindTimerModel = MindTimerModel.getInstance();

        protected function creationCompleteHandler(event:Event):void {
            settings = model.settings;
            if (settings) {
                usePomLength.selected = settings.useFixedPomodoroLength;
                countPoms.selected = settings.showPomodoroStatistic;
                pomodoroLength.text = settings.pomodoroLength.toString();
                template1.text = settings.templates[0];
                template2.text = settings.templates[1];
                template3.text = settings.templates[2];
                template4.text = settings.templates[3];
                useRecommendsCheckBox.selected = settings.useRecommends;
                cycleRecommendsCheckBox.selected = settings.cycleRecommends;
                timeRecommendList.dataProvider = new ArrayCollection(settings.recommends);
            }
        }

        protected function okHandler(event:Event):void {
            if (settings) {
                settings.useFixedPomodoroLength = usePomLength.selected;
                settings.pomodoroLength = parseInt(pomodoroLength.text);
                settings.showPomodoroStatistic = countPoms.selected;
                settings.templates[0] = template1.text;
                settings.templates[1] = template2.text;
                settings.templates[2] = template3.text;
                settings.templates[3] = template4.text;
                settings.useRecommends = useRecommendsCheckBox.selected;
                settings.cycleRecommends = cycleRecommendsCheckBox.selected;
                settings.recommends = timeRecommendList.dataProvider.toArray();
                LocalStorage.saveSettings(settings);
                model.loadSettings();
                model.trayIt.setPomodoroStatistic(model.showPomodoroStatistic);
                model.trayIt.show();
                model.trayIt.settingsShown = false;
                this.close();
            }
        }

        protected function cancelHandler(event:Event):void {
            model.trayIt.show();
            model.trayIt.settingsShown = false;
            model.trayIt.setPomodoroStatistic(model.showPomodoroStatistic);
            this.close();
        }

        protected function addTime(event:Event):void {
            timeRecommendList.dataProvider.addItem({value: addTimeInput.text})
            addTimeInput.text = "";
        }

        private function editEndHandler(event:ListEvent):void {
            event.preventDefault();
            event.stopImmediatePropagation();
            timeRecommendList.editedItemRenderer.data.value = CustomListItemEditor(event.currentTarget.itemEditorInstance).valueInput.text;
            timeRecommendList.destroyItemEditor();
            timeRecommendList.dataProvider.itemUpdated(timeRecommendList.editedItemRenderer);
        }
        ]]></fx:Script>
    <s:VGroup width="100%" height="100%">
        <mx:TabNavigator width="100%" height="100%" creationPolicy="all">
            <mx:VBox width="100%" height="100%" label="Poms">
                <s:CheckBox id="countPoms" label="Count poms"></s:CheckBox>
                <mx:HBox width="100%" height="100%">
                    <s:CheckBox id="usePomLength" label="Use pom length"></s:CheckBox>
                    <s:TextInput id="pomodoroLength" enabled="{usePomLength.selected}" text="25" width="40"
                                 restrict="0-9"/>
                </mx:HBox>
            </mx:VBox>
            <mx:VBox width="100%" height="100%" label="TimeTemplates">
                <s:VGroup>
                    <s:HGroup verticalAlign="middle">
                        <s:Label text="time 1"/>
                        <s:TextInput id="template1" width="25" restrict="0-9"/>
                        <s:Label text="time 2"/>
                        <s:TextInput id="template2" width="25" restrict="0-9"/>
                    </s:HGroup>
                    <s:HGroup verticalAlign="middle">
                        <s:Label text="time 3"/>
                        <s:TextInput id="template3" width="25" restrict="0-9"/>
                        <s:Label text="time 4"/>
                        <s:TextInput id="template4" width="25" restrict="0-9"/>
                    </s:HGroup>
                </s:VGroup>
            </mx:VBox>

            <mx:HBox width="100%" height="100" label="Recommend" verticalScrollPolicy="off">

                <mx:VBox>
                    <s:CheckBox id="useRecommendsCheckBox" label="Use recommends"/>
                    <s:CheckBox id="cycleRecommendsCheckBox" label="Cycle recommends"/>
                    <mx:HBox>
                        <s:TextInput id="addTimeInput" width="30" restrict="0-9"/>
                        <s:Button id="addButton" label="Add" click="addTime(event)" enabled="{addTimeInput.text!=''}"/>
                    </mx:HBox>
                </mx:VBox>
                <mx:List id="timeRecommendList" width="100%" height="100%"
                         itemEditor="views.renderer.CustomListItemEditor"
                         itemRenderer="views.renderer.CustomListItemRenderer"
                         editable="true"
                         rowCount="3"
                         variableRowHeight="false"
                         itemEditEnd="editEndHandler(event)">
                </mx:List>
            </mx:HBox>

        </mx:TabNavigator>
        <s:HGroup>
            <mx:Button click="okHandler(event)" label="OK"/>
            <mx:Button click="cancelHandler(event)" label="Cancel"/>
        </s:HGroup>
    </s:VGroup>
</s:Window>